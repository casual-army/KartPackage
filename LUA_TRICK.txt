local cv_tricks = CV_RegisterVar({
	name = "karttricks",
	defaultvalue = "Off",
	flags = CV_NOINIT|CV_NETVAR,
	possiblevalue = CV_OnOff
}) 

local flashstates = {S_INVULNFLASH1, S_INVULNFLASH2, S_INVULNFLASH3, S_INVULNFLASH4}
freeslot("sfx_tric") 

local trickspeed = CV_RegisterVar({
	name = "toggletrickspeed",
	defaultvalue = 0,
	flags = CV_NETVAR|CV_CALL|CV_CHEAT,
	possiblevalue = {babyboost = 0, stupidfast = 1},
	func = function(cv)
		local trickspeedtype = (cv.value == 0) and "\x8b BABYBOOST" or "\x85 STUPIDFAST"
		print("Trick speed has been updated to" .. trickspeedtype .. ".")
	end 
})

local function setplayertrickvars(p)
    p.sparkle = nil -- The barely visible orb that appears on you when you do a trick.
    p.hastricked = false 
    p.cursorframe = 1 -- For keeping track of which state in the states table (referenced above).
    p.spintimer = 0 -- How long the 'spin' animation will play when you've done a trick.
--     p.lastz = p.mo.z -- This is what is used to check if a player has gone off a slope (?????????) or not, always the z coordinate from the LAST fame.
    p.trickready = 1 -- In case a player joins in the MIDDLE of a netgame and these variables haven't been set. 
end 

local function trickspinanimate(p)
	if(not p.kartstuff[k_invincibilitytimer]) then 
	    p.sparkle = P_SpawnMobj(p.mo.x, p.mo.y, p.mo.z, MT_INVULNFLASH); -- There's probably a much more efficient way of animating sprites than this,if so, please tell me!
		p.sparkle.target = p.mo 
		p.sparkle.color = p.mo.color
		p.sparkle.sprite = SPR_KINF

		if(p.cursorframe > 4) then p.cursorframe = 1 end
		p.sparkle.state = flashstates[p.cursorframe]
		p.cursorframe = $1 + 1
	end
    p.spintimer = $1 - 1
    p.frameangle = $1 + ANGLE_22h * (leveltime) -- The actual *spinning*.
end 

-- The respawn check is there since you could do a trick WHILST being respawned (because you're not on the ground.)
local function canplayertrick(p)
    return (not P_IsObjectOnGround(p.mo) and not p.kartstuff[k_respawn] and p.kartstuff[k_spinouttimer]  == 0 and p.kartstuff[k_pogospring] == 0)
end 

addHook("NetVars", function(network) -- How can I forget this
	flashstates = network($)
end)

addHook("MapLoad", do
    for p in players.iterate do 
		p.trickready = nil
		if p.mo and not p.spectator
			setplayertrickvars(p)
		end
    end 
end)

addHook("ThinkFrame", do 
	if (not cv_tricks.value) then return end
	if (G_BattleGametype()) then return end -- No! Can you even do tricks in Battle?
    for p in players.iterate do
        if not p.mo then continue end
        if not p.trickready
			setplayertrickvars(p) 
		end  -- Netgame stuff, player just joined in the middle of a race 
        if(canplayertrick(p)) then 
            if(not p.hastricked) then 
                if(p.cmd.buttons & BT_BRAKE) then 
					if (p.mo.z > p.lastz) then -- Is their current z-coordinate grater than their last one? (Slope check)
						S_StartSound(p.mo, sfx_tric)
						if(P_RandomChance(FRACUNIT/4)) then K_PlayBoostTaunt(p.mo) end -- Oh, so you DO want to hear the taunt everytime you do a trick?
						p.hastricked = true 
						p.spintimer = (p.kartstuff[k_pogospring] == 0 and 30 or 0) -- If you're going off a spring, you're already spinning, no need to do it twice.
					end 
				else 
					p.hastricked = false
				end 
            end 

            if(p.hastricked) then 
                if (p.health < 1 or p.playerstate == PST_DEAD) then -- Scenario: landed in a deathpit, tricked boolean was still true, could hear myself boosting once my character hit the floor before respawning
                    p.hastricked = false 
                    return
                end 
                
                if(p.spintimer > 0) then 
                    trickspinanimate(p)
                elseif (p.kartstuff[k_pogospring] == 0) then 
                    p.frameangle = p.mo.angle
                end 

                if leveltime % 3 then
                    p.mo.colorized = true
                else
                    p.mo.colorized = false
                end 
            end 
        end 

        if(P_IsObjectOnGround(p.mo) and p.hastricked) then 
		
			if(trickspeed.value == 0)
				p.kartstuff[k_driftboost] = 30 
				S_StartSound(p.mo, sfx_s23c); -- This doesn't play a sound, so just do it manually.
			else
				K_DoSneaker(p, 1) -- hilarious
			end 

            p.hastricked = false 

			if 
            p.frameangle = p.mo.angle -- What if you land whilst spinning? 
            p.mo.color = p.skincolor
            p.spintimer = 30
        end 

        p.lastz = p.mo.z -- Keeping track of z value in last frame
    end
end)